{
	"info": {
		"_postman_id": "5c897f5f-729c-4523-85ce-903cc88a8546",
		"name": "Trello -API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39511903"
	},
	"item": [
		{
			"name": "Board",
			"item": [
				{
					"name": "Create a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"new_board_id\", jsonData.id); \r",
									"pm.collectionVariables.set(\"boardName\", jsonData.name); \r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check board name\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"boardName\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"boardName\", pm.variables.replaceIn('{{$randomStreetName}}'));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{boardName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/boards/?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								""
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"jsonData = pm.response.json();\r",
									"boardName = pm.collectionVariables.get(\"boardName\")\r",
									"\r",
									"\r",
									"pm.test(\"Should verify response status is 200\", () =>{\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"pm.test(\"Should verify response name is correct\", () =>{    \r",
									"    pm.expect(jsonData.name).to.eql(boardName)\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/boards/{{new_board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{new_board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Update a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"updateBoardName\", jsonData.name)\r",
									"\r",
									"pm.test(\"Check updated name of board\", function () {\r",
									"    \r",
									"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"updateBoardName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"updateBoardName\", updateBoardName = pm.variables.replaceIn(\"Board \" + \"{{$randomColor}}\" ));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{updateBoardName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/boards/{{new_board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{new_board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request PUT \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				}
			]
		},
		{
			"name": "List",
			"item": [
				{
					"name": "Create a List on a Board",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"//Pre-request script wykonuje się przed wykonaniem żądania\r",
									"pm.collectionVariables.set(\"listName\", pm.variables.replaceIn('{{$randomJobTitle}}'));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Should verify response status is 200\", () =>{\r",
									"   pm.expect(pm.response.code).to.eql(200)\r",
									"})\r",
									"pm.test(\"Check List name \", () =>{\r",
									"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"listName\"))\r",
									"})\r",
									"\r",
									"pm.collectionVariables.set(\"new_list_id\", jsonData.id)\r",
									"pm.collectionVariables.set(\"listName\", jsonData.name)\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n        \"name\": \"{{listName}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/boards/{{new_board_id}}/lists?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{new_board_id}}",
								"lists"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://api.trello.com/1/members/me/boards?key={yourKey}&token={yourToken}' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Get Lists on a Board",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonData = pm.response.json();\r",
									"nameList = pm.collectionVariables.get(\"listName\");\r",
									"\r",
									"pm.test(\"Should verify name new list is correct\", () =>{\r",
									"    pm.expect(jsonData[0].name).to.eql(nameList)\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/boards/{{new_board_id}}/lists?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{new_board_id}}",
								"lists"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://api.trello.com/1/members/me/boards?key={yourKey}&token={yourToken}' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Update a List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"updateListName\", jsonData.name)\r",
									"\r",
									"pm.test(\"Check updated name of list\", function () {\r",
									"    \r",
									"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"updateListName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"updateListName\", pm.variables.replaceIn('{{$randomJobTitle}}'));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{updateListName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/lists/{{new_list_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists",
								"{{new_list_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request PUT \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				},
				{
					"name": "Archive all Cards in List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should verify response body is empty\", () =>{\r",
									"    pm.expect(jsonData).to.include({})\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"updateListName\", pm.variables.replaceIn('{{$randomJobTitle}}'));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/lists/{{new_list_id}}/archiveAllCards?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists",
								"{{new_list_id}}",
								"archiveAllCards"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request PUT \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				},
				{
					"name": "Archive a list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"pm.test(\"Should verify list is closed\", function () {\r",
									"    pm.expect(jsonData.closed).to.eql(true);\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"archive\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/lists/{{new_list_id}}/closed?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists",
								"{{new_list_id}}",
								"closed"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request PUT \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Card",
			"item": [
				{
					"name": "Create a new Card",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Pre-request script wykonuje się przed wykonaniem żądania\r",
									"pm.variables.set(\"cardName\", pm.variables.replaceIn('{{$randomCountry}}'));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\"Should verify response status is 200\", () =>{\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"pm.collectionVariables.set(\"new_card_id\", jsonData.id)\r",
									"pm.collectionVariables.set(\"cardName\", jsonData.name)\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{cardName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cards/?key={{key}}&token={{token}}&idList={{new_list_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								""
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "idList",
									"value": "{{new_list_id}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://api.trello.com/1/members/me/boards?key={yourKey}&token={yourToken}' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Get a Card",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonData = pm.response.json();\r",
									"const newCardName = pm.collectionVariables.get(\"cardName\");\r",
									"\r",
									"pm.test(\"Should verify response status is 200\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Should verify card name\", () =>{\r",
									"    pm.expect(jsonData.name).to.eql(newCardName)\r",
									"})\r",
									"\r",
									"pm.test(\"Should verify card status\", () =>{\r",
									"    pm.expect(jsonData.closed).to.eql(false)\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cards/{{new_card_id}}/?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{new_card_id}}",
								""
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://api.trello.com/1/members/me/boards?key={yourKey}&token={yourToken}' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Update a Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"updateCardName\", jsonData.name)\r",
									"\r",
									"pm.test(\"Check updated name of card\", function () {\r",
									"    \r",
									"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"updateCardName\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const lodash = require('lodash');\r",
									"pm.variables.set(\"updateCardName\", pm.variables.replaceIn('{{$randomJobTitle}}' + ' ' + lodash.random(1,10)));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{updateCardName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cards/{{new_card_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{new_card_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request PUT \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Checklist",
			"item": [
				{
					"name": "Create a new Checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Should verify response status is 200\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.collectionVariables.set(\"checklist_id\", jsonData.id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set(\"checklist\", pm.variables.replaceIn('Checklist ' + '{{$randomHexColor}}'));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{checklist}}\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cards/{{new_card_id}}/checklists?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{new_card_id}}",
								"checklists"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request PUT \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				},
				{
					"name": "Get Checklist",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"const idchecklist = pm.collectionVariables.get(\"checklist_id\", jsonData.id)\r",
									"\r",
									"pm.test(\"Should verify response status is 200\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Should verify idChecklists is correct\", () =>{\r",
									"    pm.expect(jsonData[0].id).to.eql(idchecklist)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/cards/{{new_card_id}}/checklists?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{new_card_id}}",
								"checklists"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request GET \\\r\n  --url 'https://api.trello.com/1/members/me/boards?key={yourKey}&token={yourToken}' \\\r\n  --header 'Accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Create CheckItem in Checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Should verify response status is 200\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.collectionVariables.set(\"checkitem_name\", jsonData.id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const lodash = require('lodash');\r",
									"pm.variables.set(\"checklist\", pm.variables.replaceIn('Item ' + lodash.random(1,50)));\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{checklist}}\"\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/checklists/{{checklist_id}}/checkItems?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"{{checklist_id}}",
								"checkItems"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request PUT \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete a Checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/boards/{{new_board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{new_board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request DELETE \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				},
				{
					"name": "Delete a Card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/boards/{{new_board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{new_board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request DELETE \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				},
				{
					"name": "Delete a List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/boards/{{new_board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{new_board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request DELETE \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				},
				{
					"name": "Delete a Board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/boards/{{new_board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{new_board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						},
						"description": "Generated from cURL: curl --request DELETE \\\r\n  --url 'https://api.trello.com/1/boards/{id}?key=APIKey&token=APIToken'"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "key",
			"value": "a355ee2722c86dfca3f204e29f58442e",
			"type": "string"
		},
		{
			"key": "token",
			"value": "ATTA3c832b247240f5e04d473a5fc63ad7ee74c932feb90aa791450cddcc944bcd190CA13EC8",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "https://api.trello.com",
			"type": "string"
		},
		{
			"key": "updateBoardName",
			"value": ""
		},
		{
			"key": "updateListName",
			"value": ""
		},
		{
			"key": "updateCardName",
			"value": ""
		},
		{
			"key": "checklist_id",
			"value": ""
		},
		{
			"key": "checkitem_name",
			"value": ""
		},
		{
			"key": "new_board_id",
			"value": ""
		},
		{
			"key": "boardName",
			"value": ""
		},
		{
			"key": "NameOfList",
			"value": ""
		},
		{
			"key": "new_list_id",
			"value": ""
		},
		{
			"key": "randomName",
			"value": ""
		},
		{
			"key": "NameOfCard",
			"value": ""
		},
		{
			"key": "new_card_id",
			"value": ""
		},
		{
			"key": "new_card_name",
			"value": ""
		},
		{
			"key": "checklist",
			"value": ""
		},
		{
			"key": "cardName",
			"value": ""
		},
		{
			"key": "listName",
			"value": ""
		}
	]
}